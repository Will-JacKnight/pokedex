{"ast":null,"code":"import titleImg from'../images/signup-text.png';import{useState}from'react';import Form from'../components/Form';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:5000';function SignUp(){const[username,setUsername]=useState(\"\");// state to store username\nconst[password,setPassword]=useState(\"\");// state to store password\nconst[credentialsError,setCredentialsError]=useState(false);// state to store credentials error (default false)\nconst[loading,setLoading]=useState(false);// state to store loading status (defualt false)\nconst navigate=useNavigate();// useNavigate to navigate to other pages\n// function to handle username change and update state\nfunction handleUsernameChange(e){setUsername(e.target.value);}// function to handle password change and update state\nfunction handlePasswordChange(e){setPassword(e.target.value);}// function to handle form submission\nasync function handleSubmit(e){e.preventDefault();// prevents default form submission\nsetLoading(true);// submit post request to backend with username and password\nconst response=await fetch(`${API_BASE_URL}/signup`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username,password:password})});const data=await response.json();setLoading(false);// if response is successful, set credentialsError to false and navigate to home page\nif(data.success){setCredentialsError(false);sessionStorage.setItem('access_token',data.access_token);navigate('/');// if response is not successful, set credentialsError to true\n}else{setCredentialsError(true);}console.log(data);}// return the JSX for the signup page\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"img\",{src:titleImg,alt:\"title\",className:\"title-img\"}),/*#__PURE__*/_jsx(Form,{handlePasswordChange:handlePasswordChange,handleUsernameChange:handleUsernameChange,handleSubmit:handleSubmit,username:username,password:password,login:false,credentialsError:credentialsError,loading:loading})]})});}export default SignUp;","map":{"version":3,"names":["titleImg","useState","Form","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","SignUp","username","setUsername","password","setPassword","credentialsError","setCredentialsError","loading","setLoading","navigate","handleUsernameChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","sessionStorage","setItem","access_token","console","log","children","className","src","alt","login"],"sources":["C:/Users/Kumar/Desktop/SSE_POKEMON/pokedex/frontend-app/src/pages/signup.jsx"],"sourcesContent":["import titleImg from '../images/signup-text.png';\r\nimport { useState } from 'react';\r\nimport Form from '../components/Form';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\n\r\nfunction SignUp() {\r\n    const [username, setUsername] = useState(\"\"); // state to store username\r\n    const [password, setPassword] = useState(\"\"); // state to store password\r\n    const [credentialsError, setCredentialsError] = useState(false); // state to store credentials error (default false)\r\n    const [loading, setLoading] = useState(false); // state to store loading status (defualt false)\r\n\r\n\r\n    const navigate = useNavigate(); // useNavigate to navigate to other pages\r\n\r\n    // function to handle username change and update state\r\n    function handleUsernameChange(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    // function to handle password change and update state\r\n    function handlePasswordChange(e) {\r\n        setPassword(e.target.value);\r\n    }   \r\n\r\n    // function to handle form submission\r\n    async function handleSubmit(e) {\r\n        e.preventDefault(); // prevents default form submission\r\n        setLoading(true);\r\n        // submit post request to backend with username and password\r\n        const response = await fetch(`${API_BASE_URL}/signup`, { \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            }),\r\n        });\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        // if response is successful, set credentialsError to false and navigate to home page\r\n        if(data.success) {\r\n            setCredentialsError(false);\r\n            sessionStorage.setItem('access_token', data.access_token);\r\n            navigate('/');\r\n        // if response is not successful, set credentialsError to true\r\n        } else {\r\n            setCredentialsError(true);\r\n        }\r\n        console.log(data);\r\n\r\n    }\r\n\r\n    // return the JSX for the signup page\r\n    return(\r\n    <>\r\n    <div className=\"container\">\r\n        <img src={titleImg} alt='title' className='title-img'/>\r\n        <Form \r\n            handlePasswordChange={handlePasswordChange} \r\n            handleUsernameChange={handleUsernameChange} \r\n            handleSubmit={handleSubmit} username={username} \r\n            password={password}\r\n            login={false}\r\n            credentialsError={credentialsError}\r\n            loading={loading}\r\n        />\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SignUp"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,2BAA2B,CAChD,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,OAAQC,WAAW,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE7C,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,uBAAuB,CAGlF,QAAS,CAAAC,MAAMA,CAAA,CAAG,CACd,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAACkB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAE;AACjE,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAG/C,KAAM,CAAAsB,QAAQ,CAAGpB,WAAW,CAAC,CAAC,CAAE;AAEhC;AACA,QAAS,CAAAqB,oBAAoBA,CAACC,CAAC,CAAE,CAC7BT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAEA;AACA,QAAS,CAAAC,oBAAoBA,CAACH,CAAC,CAAE,CAC7BP,WAAW,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAEA;AACA,cAAe,CAAAE,YAAYA,CAACJ,CAAC,CAAE,CAC3BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAAE;AACpBR,UAAU,CAAC,IAAI,CAAC,CAChB;AACA,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGtB,YAAY,SAAS,CAAE,CACnDuB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBtB,QAAQ,CAAEA,QAAQ,CAClBE,QAAQ,CAAEA,QACd,CAAC,CACL,CAAC,CAAC,CACF,KAAM,CAAAqB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCjB,UAAU,CAAC,KAAK,CAAC,CACjB;AACA,GAAGgB,IAAI,CAACE,OAAO,CAAE,CACbpB,mBAAmB,CAAC,KAAK,CAAC,CAC1BqB,cAAc,CAACC,OAAO,CAAC,cAAc,CAAEJ,IAAI,CAACK,YAAY,CAAC,CACzDpB,QAAQ,CAAC,GAAG,CAAC,CACjB;AACA,CAAC,IAAM,CACHH,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CACAwB,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC,CAErB,CAEA;AACA,mBACAjC,IAAA,CAAAI,SAAA,EAAAqC,QAAA,cACAvC,KAAA,QAAKwC,SAAS,CAAC,WAAW,CAAAD,QAAA,eACtBzC,IAAA,QAAK2C,GAAG,CAAEhD,QAAS,CAACiD,GAAG,CAAC,OAAO,CAACF,SAAS,CAAC,WAAW,CAAC,CAAC,cACvD1C,IAAA,CAACH,IAAI,EACD0B,oBAAoB,CAAEA,oBAAqB,CAC3CJ,oBAAoB,CAAEA,oBAAqB,CAC3CK,YAAY,CAAEA,YAAa,CAACd,QAAQ,CAAEA,QAAS,CAC/CE,QAAQ,CAAEA,QAAS,CACnBiC,KAAK,CAAE,KAAM,CACb/B,gBAAgB,CAAEA,gBAAiB,CACnCE,OAAO,CAAEA,OAAQ,CACpB,CAAC,EACD,CAAC,CACJ,CAAC,CAEP,CAEA,cAAe,CAAAP,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}