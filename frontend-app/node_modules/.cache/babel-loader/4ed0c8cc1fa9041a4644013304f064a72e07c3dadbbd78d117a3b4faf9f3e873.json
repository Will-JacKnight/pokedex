{"ast":null,"code":"import{ClipLoader}from\"react-spinners\";import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Form(_ref){let{handlePasswordChange,handleUsernameChange,handleSubmit,username,password,login,credentialsError,loading}=_ref;const navigate=useNavigate();// used to navigate to other pages\n// used to override the background color and position of the loader\nconst ovveride={backgroundColor:\"white\",position:\"absolute\",bottom:\"25px\",left:\"200px\"};// necessary to navigate() to signup/login page instead of using href in anchor tag because impaas does not allow redirecting to other routes\n// that are not in the backend through href\n// using navgiate() instead of href makes it possible\nfunction handleSignupClick(e){e.preventDefault();navigate('/signup');}function handleLoginClick(e){e.preventDefault();navigate('/login');}// returning the JSX for the form containg the input fields and button\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"User Name\",value:username,onChange:handleUsernameChange,className:\"username-input\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:handlePasswordChange,className:\"password-input\",required:true}),login&&credentialsError&&/*#__PURE__*/_jsx(\"p\",{className:\"form-error-msg\",children:\"Incorrect Credentials\"}),!login&&credentialsError&&/*#__PURE__*/_jsx(\"p\",{className:\"form-error-msg\",children:\"Username already exists\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",children:login?\"Login\":\"Sign Up\"}),login&&/*#__PURE__*/_jsx(\"p\",{className:\"not-registered\",children:/*#__PURE__*/_jsxs(\"i\",{children:[\"Already Registered? \",/*#__PURE__*/_jsx(\"span\",{className:\"underline\",onClick:handleSignupClick,children:\"Sign Up\"})]})}),!login&&/*#__PURE__*/_jsx(\"p\",{className:\"not-registered\",children:/*#__PURE__*/_jsxs(\"i\",{children:[\"Already Registered? \",/*#__PURE__*/_jsx(\"span\",{className:\"underline\",onClick:handleLoginClick,children:\"Login\"})]})}),loading&&/*#__PURE__*/_jsx(ClipLoader,{color:\"black\",size:50,className:\"loader\",cssOverride:ovveride})]})});}export default Form;","map":{"version":3,"names":["ClipLoader","useNavigate","jsx","_jsx","jsxs","_jsxs","Form","_ref","handlePasswordChange","handleUsernameChange","handleSubmit","username","password","login","credentialsError","loading","navigate","ovveride","backgroundColor","position","bottom","left","handleSignupClick","e","preventDefault","handleLoginClick","className","children","onSubmit","type","placeholder","value","onChange","required","onClick","color","size","cssOverride"],"sources":["C:/Users/Kumar/Desktop/SSE_POKEMON/pokedex/frontend-app/src/components/Form.jsx"],"sourcesContent":["import { ClipLoader } from \"react-spinners\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Form({handlePasswordChange, handleUsernameChange, handleSubmit, username, password, login, credentialsError, loading}) {\r\n    const navigate = useNavigate(); // used to navigate to other pages\r\n    // used to override the background color and position of the loader\r\n    const ovveride ={\r\n        backgroundColor: \"white\",\r\n        position: \"absolute\",\r\n        bottom: \"25px\",\r\n        left: \"200px\",\r\n      }\r\n\r\n    // necessary to navigate() to signup/login page instead of using href in anchor tag because impaas does not allow redirecting to other routes\r\n    // that are not in the backend through href\r\n    // using navgiate() instead of href makes it possible\r\n    function handleSignupClick(e) {\r\n        e.preventDefault();\r\n        navigate('/signup');\r\n    }\r\n    \r\n    function handleLoginClick(e) {\r\n        e.preventDefault();\r\n        navigate('/login');\r\n    }\r\n    \r\n      // returning the JSX for the form containg the input fields and button\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit} className='form'>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"User Name\" \r\n                    value={username}\r\n                    onChange={handleUsernameChange}\r\n                    className='username-input'\r\n                    required\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                    className='password-input'\r\n                    required\r\n                />\r\n                {/* contidionally rendering the error messages */}\r\n                {login && credentialsError && <p className='form-error-msg'>Incorrect Credentials</p>}\r\n                {!login && credentialsError && <p className='form-error-msg'>Username already exists</p>}\r\n                <button type=\"submit\" className='submit-btn'>\r\n                    {login ? \"Login\" : \"Sign Up\"}\r\n                </button>\r\n                {/* contidionally rendering the error messages */}\r\n                {login && <p className='not-registered'><i>Already Registered? <span className=\"underline\" onClick={handleSignupClick}>Sign Up</span></i></p>}\r\n                {!login && <p className='not-registered'><i>Already Registered? <span className=\"underline\" onClick={handleLoginClick}>Login</span></i></p>}\r\n            \r\n                {/* conditionally rendering the loader */}\r\n                {loading && <ClipLoader\r\n                  color={\"black\"}\r\n                  size={50}\r\n                  className='loader'\r\n                  cssOverride={ovveride}\r\n                />\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form"],"mappings":"AAAA,OAASA,UAAU,KAAQ,gBAAgB,CAC3C,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,IAAIA,CAAAC,IAAA,CAAmH,IAAlH,CAACC,oBAAoB,CAAEC,oBAAoB,CAAEC,YAAY,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,gBAAgB,CAAEC,OAAO,CAAC,CAAAR,IAAA,CAC1H,KAAM,CAAAS,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAAE;AAChC;AACA,KAAM,CAAAgB,QAAQ,CAAE,CACZC,eAAe,CAAE,OAAO,CACxBC,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,OACR,CAAC,CAEH;AACA;AACA;AACA,QAAS,CAAAC,iBAAiBA,CAACC,CAAC,CAAE,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBR,QAAQ,CAAC,SAAS,CAAC,CACvB,CAEA,QAAS,CAAAS,gBAAgBA,CAACF,CAAC,CAAE,CACzBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBR,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAEE;AACF,mBACIb,IAAA,QAAKuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC3BtB,KAAA,SAAMuB,QAAQ,CAAElB,YAAa,CAACgB,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1CxB,IAAA,UACI0B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAEpB,QAAS,CAChBqB,QAAQ,CAAEvB,oBAAqB,CAC/BiB,SAAS,CAAC,gBAAgB,CAC1BO,QAAQ,MACX,CAAC,cACF9B,IAAA,UACI0B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEnB,QAAS,CAChBoB,QAAQ,CAAExB,oBAAqB,CAC/BkB,SAAS,CAAC,gBAAgB,CAC1BO,QAAQ,MACX,CAAC,CAEDpB,KAAK,EAAIC,gBAAgB,eAAIX,IAAA,MAAGuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,uBAAqB,CAAG,CAAC,CACpF,CAACd,KAAK,EAAIC,gBAAgB,eAAIX,IAAA,MAAGuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,yBAAuB,CAAG,CAAC,cACxFxB,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,YAAY,CAAAC,QAAA,CACvCd,KAAK,CAAG,OAAO,CAAG,SAAS,CACxB,CAAC,CAERA,KAAK,eAAIV,IAAA,MAAGuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAACtB,KAAA,MAAAsB,QAAA,EAAG,sBAAoB,cAAAxB,IAAA,SAAMuB,SAAS,CAAC,WAAW,CAACQ,OAAO,CAAEZ,iBAAkB,CAAAK,QAAA,CAAC,SAAO,CAAM,CAAC,EAAG,CAAC,CAAG,CAAC,CAC5I,CAACd,KAAK,eAAIV,IAAA,MAAGuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAACtB,KAAA,MAAAsB,QAAA,EAAG,sBAAoB,cAAAxB,IAAA,SAAMuB,SAAS,CAAC,WAAW,CAACQ,OAAO,CAAET,gBAAiB,CAAAE,QAAA,CAAC,OAAK,CAAM,CAAC,EAAG,CAAC,CAAG,CAAC,CAG1IZ,OAAO,eAAIZ,IAAA,CAACH,UAAU,EACrBmC,KAAK,CAAE,OAAQ,CACfC,IAAI,CAAE,EAAG,CACTV,SAAS,CAAC,QAAQ,CAClBW,WAAW,CAAEpB,QAAS,CACvB,CAAC,EAEA,CAAC,CACN,CAAC,CAEd,CAEA,cAAe,CAAAX,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}