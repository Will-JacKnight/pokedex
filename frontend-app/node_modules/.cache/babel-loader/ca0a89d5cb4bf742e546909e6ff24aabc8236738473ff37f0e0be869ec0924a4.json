{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kumar\\\\Desktop\\\\app\\\\frontend\\\\frontend-app\\\\src\\\\pages\\\\home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport titleImg from '../images/pokemon_logo.png';\nimport PokemonCard from '../components/PokemonCard';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch data from Flask API using fetch\n    fetch('http://127.0.0.1:5000/api/pokemons').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(rec_data => setData(Object.values(rec_data))) // convert object to array and store in data state\n    .catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const pokemonEl = data === null || data === void 0 ? void 0 : data.map((pokemon, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/details/${pokemon.name}`,\n      children: /*#__PURE__*/_jsxDEV(PokemonCard, {\n        pokemon: pokemon,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n\n    // <Link key={index} to={`/details/${pokemon.name}`}>\n    //   <div key={index} className='pokemon-poster normal-type' >\n    //     <div> \n    //       <h3 id='pokemon-name'>{pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}</h3>\n    //       <h3 id='hp'>HP: {pokemon.hp}</h3>\n    //     </div>\n    //     <img src={pokemon.image} alt={pokemon.name} className='pokemon-poster-img'/>\n    //     <div className='stats-container'>\n    //       <div className='pokemon-stats'>\n    //         <p><strong>ATT</strong>&nbsp;&nbsp;{pokemon.attack}</p> \n    //         <p><strong>DEF</strong>&nbsp;&nbsp;{pokemon.defense}</p>\n    //       </div>\n    //       <div className='pokemon-stats'>\n    //         <p><strong>WEIGHT</strong>&nbsp;&nbsp;{pokemon.weight}</p>\n    //         <p><strong>SPEED</strong>&nbsp;&nbsp;{pokemon.speed}</p>\n    //       </div>\n    //     </div>        \n    //   </div>\n    // </Link>\n    ;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: titleImg,\n      alt: \"title\",\n      className: \"title-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-poster-list\",\n        children: pokemonEl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","titleImg","PokemonCard","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","data","setData","fetch","then","response","ok","Error","json","rec_data","Object","values","catch","error","console","pokemonEl","map","pokemon","index","to","name","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","className","_c","$RefreshReg$"],"sources":["C:/Users/Kumar/Desktop/app/frontend/frontend-app/src/pages/home.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport titleImg from '../images/pokemon_logo.png';\r\nimport PokemonCard from '../components/PokemonCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from Flask API using fetch\r\n    fetch('http://127.0.0.1:5000/api/pokemons')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(rec_data => setData(Object.values(rec_data))) // convert object to array and store in data state\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  const pokemonEl = data?.map((pokemon, index) => {\r\n    return (\r\n      <Link key={index} to={`/details/${pokemon.name}`}>\r\n        <PokemonCard pokemon={pokemon} index={index}>\r\n        </PokemonCard>\r\n      </Link>\r\n\r\n      // <Link key={index} to={`/details/${pokemon.name}`}>\r\n      //   <div key={index} className='pokemon-poster normal-type' >\r\n      //     <div> \r\n      //       <h3 id='pokemon-name'>{pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}</h3>\r\n      //       <h3 id='hp'>HP: {pokemon.hp}</h3>\r\n      //     </div>\r\n      //     <img src={pokemon.image} alt={pokemon.name} className='pokemon-poster-img'/>\r\n      //     <div className='stats-container'>\r\n      //       <div className='pokemon-stats'>\r\n      //         <p><strong>ATT</strong>&nbsp;&nbsp;{pokemon.attack}</p> \r\n      //         <p><strong>DEF</strong>&nbsp;&nbsp;{pokemon.defense}</p>\r\n      //       </div>\r\n      //       <div className='pokemon-stats'>\r\n      //         <p><strong>WEIGHT</strong>&nbsp;&nbsp;{pokemon.weight}</p>\r\n      //         <p><strong>SPEED</strong>&nbsp;&nbsp;{pokemon.speed}</p>\r\n      //       </div>\r\n      //     </div>        \r\n      //   </div>\r\n      // </Link>\r\n    );\r\n  })\r\n\r\n    return (\r\n      <>\r\n      <img src={titleImg} alt='title' className='title-img'/>\r\n      <div className='container'>\r\n        <div className='pokemon-poster-list'>\r\n            {pokemonEl}\r\n        </div>  \r\n      </div>\r\n\r\n      </>\r\n    \r\n    );\r\n  }\r\n  \r\n  export default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,QAAQ,IAAIP,OAAO,CAACQ,MAAM,CAACC,MAAM,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA,CACnDG,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAGd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC9C,oBACEtB,OAAA,CAACF,IAAI;MAAayB,EAAE,EAAE,YAAYF,OAAO,CAACG,IAAI,EAAG;MAAAC,QAAA,eAC/CzB,OAAA,CAACH,WAAW;QAACwB,OAAO,EAAEA,OAAQ;QAACC,KAAK,EAAEA;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC,GAFLP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;EAEJ,CAAC,CAAC;EAEA,oBACE7B,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACAzB,OAAA;MAAK8B,GAAG,EAAElC,QAAS;MAACmC,GAAG,EAAC,OAAO;MAACC,SAAS,EAAC;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvD7B,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAP,QAAA,eACxBzB,OAAA;QAAKgC,SAAS,EAAC,qBAAqB;QAAAP,QAAA,EAC/BN;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eAEJ,CAAC;AAGP;AAACzB,EAAA,CAzDMD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA2DX,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}