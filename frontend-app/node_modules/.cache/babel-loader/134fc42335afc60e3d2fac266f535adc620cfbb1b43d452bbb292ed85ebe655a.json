{"ast":null,"code":"import{useEffect,useState}from'react';import titleImg from'../images/pokemon_logo.png';import accoutImg from'../images/login-logout.jpg';import PokemonCard from'../components/PokemonCard';import{useNavigate}from'react-router-dom';import SearchBar from'../components/SearchBar';import Sidebar from'../components/Sidebar';import{ClipLoader}from'react-spinners';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:5000';function Home(){const[data,setData]=useState([]);// state to store data\nconst[loading,setLoading]=useState(false);// state to store loading status\nconst navigate=useNavigate();// useNavigate hook to navigate to other pages\nuseEffect(()=>{// Get data from sessionStorage if it exists\nif(sessionStorage.getItem('pokemons')){setData(JSON.parse(sessionStorage.getItem('pokemons')));}// otherwise fetch from backend\nelse{setLoading(true);fetch(`${API_BASE_URL}/api/pokemons`).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(rec_data=>{let arrData=Object.values(rec_data);setData(Object.values(arrData));// convert dictionary to array and store in data state\nsessionStorage.setItem('pokemons',JSON.stringify(arrData));// also store in session storage for future use\n}).catch(error=>console.error('Error fetching data:',error)).finally(()=>{setLoading(false);});}},[]);// function to handle logout/login\nfunction handleAccountClick(){// if jwt token is not present, navigate to login page\nif(!sessionStorage.getItem('access_token')){navigate('/login');}// if jwt token is present, remove it (thus logging out user) and navigate to home page\nelse{alert(\"You have been logged out successfully!\");sessionStorage.removeItem('access_token');navigate('/');}}// Mapping over the data to render PokemonCard components\nconst pokemonEl=data===null||data===void 0?void 0:data.map((pokemon,index)=>{return/*#__PURE__*/_jsx(PokemonCard,{pokemon:pokemon,index:index});});// returning the JSX for the main page\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(SearchBar,{}),/*#__PURE__*/_jsx(\"img\",{src:titleImg,alt:\"title\",className:\"title-img\"}),/*#__PURE__*/_jsx(\"img\",{src:accoutImg,alt:\"title\",className:\"accout-img\",onClick:handleAccountClick}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon-poster-list\",children:[loading&&/*#__PURE__*/_jsx(ClipLoader,{color:\"white\",size:100,className:\"loader\"}),!loading&&pokemonEl]})]})});}export default Home;","map":{"version":3,"names":["useEffect","useState","titleImg","accoutImg","PokemonCard","useNavigate","SearchBar","Sidebar","ClipLoader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Home","data","setData","loading","setLoading","navigate","sessionStorage","getItem","JSON","parse","fetch","then","response","ok","Error","json","rec_data","arrData","Object","values","setItem","stringify","catch","error","console","finally","handleAccountClick","alert","removeItem","pokemonEl","map","pokemon","index","children","className","src","alt","onClick","color","size"],"sources":["C:/Users/Kumar/Desktop/SSE_POKEMON/pokedex/frontend-app/src/pages/home.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport titleImg from '../images/pokemon_logo.png';\r\nimport accoutImg from '../images/login-logout.jpg';\r\nimport PokemonCard from '../components/PokemonCard';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\nfunction Home() {\r\n  const [data, setData] = useState([]); // state to store data\r\n  const [loading, setLoading] = useState(false);  // state to store loading status\r\n\r\n  const navigate = useNavigate(); // useNavigate hook to navigate to other pages\r\n\r\n  useEffect(() => {\r\n    // Get data from sessionStorage if it exists\r\n    if (sessionStorage.getItem('pokemons')) {\r\n      setData(JSON.parse(sessionStorage.getItem('pokemons')));\r\n    }\r\n    // otherwise fetch from backend\r\n    else {\r\n      setLoading(true);\r\n      fetch(`${API_BASE_URL}/api/pokemons`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(rec_data => {\r\n        let arrData = Object.values(rec_data);\r\n        setData(Object.values(arrData)); // convert dictionary to array and store in data state\r\n        sessionStorage.setItem('pokemons', JSON.stringify(arrData)); // also store in session storage for future use\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error)).finally(() => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n    \r\n  }, []);\r\n\r\n  // function to handle logout/login\r\n  function handleAccountClick() {\r\n    // if jwt token is not present, navigate to login page\r\n    if(!sessionStorage.getItem('access_token')) {\r\n      navigate('/login');\r\n\r\n    } \r\n    // if jwt token is present, remove it (thus logging out user) and navigate to home page\r\n    else { \r\n      alert(\"You have been logged out successfully!\");\r\n      sessionStorage.removeItem('access_token');\r\n      navigate('/');\r\n    }\r\n  }\r\n  \r\n  // Mapping over the data to render PokemonCard components\r\n  const pokemonEl = data?.map((pokemon, index) => {\r\n    return (\r\n        <PokemonCard pokemon={pokemon} index={index} >\r\n        </PokemonCard>\r\n    );\r\n  })\r\n  \r\n    // returning the JSX for the main page\r\n    return (\r\n      <>\r\n      <div className=\"container\">\r\n        <Sidebar /> \r\n        <SearchBar></SearchBar>\r\n        <img src={titleImg} alt='title' className='title-img'/>\r\n        <img src={accoutImg} alt='title' className='accout-img' onClick={handleAccountClick}/>\r\n\r\n   \r\n        <div className='pokemon-poster-list'>\r\n        {/* Conditionally rendering the loading icon if loading is true */}\r\n            {loading && <ClipLoader\r\n                  color={\"white\"}\r\n                  size={100}\r\n                  className='loader'\r\n                />\r\n            }\r\n            {!loading && pokemonEl}\r\n        </div> \r\n        \r\n      </div>\r\n      </>\r\n    \r\n    );\r\n  }\r\n  \r\n  export default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}