{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kumar\\\\Desktop\\\\SSE_POKEMON\\\\pokedex\\\\frontend-app\\\\src\\\\pages\\\\signup.jsx\",\n  _s = $RefreshSig$();\nimport titleImg from '../images/signup-text.png';\nimport { useState } from 'react';\nimport Form from '../components/Form';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\nfunction SignUp() {\n  _s();\n  const [username, setUsername] = useState(\"\"); // state to store username\n  const [password, setPassword] = useState(\"\"); // state to store password\n  const [credentialsError, setCredentialsError] = useState(false); // state to store credentials error (default false)\n  const [loading, setLoading] = useState(false); // state to store loading status (defualt false)\n\n  const navigate = useNavigate(); // useNavigate to navigate to other pages\n\n  // function to handle username change and update state\n  function handleUsernameChange(e) {\n    setUsername(e.target.value);\n  }\n\n  // function to handle password change and update state\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  // function to handle form submission\n  async function handleSubmit(e) {\n    e.preventDefault(); // prevents default form submission\n    setLoading(true);\n    // submit post request to backend with username and password\n    const response = await fetch(`${API_BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const data = await response.json();\n    setLoading(false);\n    // if response is successful, set credentialsError to false and navigate to home page\n    if (data.success) {\n      setCredentialsError(false);\n      sessionStorage.setItem('access_token', data.access_token);\n      navigate('/');\n      // if response is not successful, set credentialsError to true\n    } else {\n      setCredentialsError(true);\n    }\n    console.log(data);\n  }\n\n  // return the JSX for the signup page\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: titleImg,\n        alt: \"title\",\n        className: \"title-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handlePasswordChange: handlePasswordChange,\n        handleUsernameChange: handleUsernameChange,\n        handleSubmit: handleSubmit,\n        username: username,\n        password: password,\n        login: false,\n        credentialsError: credentialsError,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(SignUp, \"kEOZuJCaLHuTR6s8ckYS0HZRCr0=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["titleImg","useState","Form","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","SignUp","_s","username","setUsername","password","setPassword","credentialsError","setCredentialsError","loading","setLoading","navigate","handleUsernameChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","sessionStorage","setItem","access_token","console","log","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","login","_c","$RefreshReg$"],"sources":["C:/Users/Kumar/Desktop/SSE_POKEMON/pokedex/frontend-app/src/pages/signup.jsx"],"sourcesContent":["import titleImg from '../images/signup-text.png';\r\nimport { useState } from 'react';\r\nimport Form from '../components/Form';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\n\r\nfunction SignUp() {\r\n    const [username, setUsername] = useState(\"\"); // state to store username\r\n    const [password, setPassword] = useState(\"\"); // state to store password\r\n    const [credentialsError, setCredentialsError] = useState(false); // state to store credentials error (default false)\r\n    const [loading, setLoading] = useState(false); // state to store loading status (defualt false)\r\n\r\n\r\n    const navigate = useNavigate(); // useNavigate to navigate to other pages\r\n\r\n    // function to handle username change and update state\r\n    function handleUsernameChange(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    // function to handle password change and update state\r\n    function handlePasswordChange(e) {\r\n        setPassword(e.target.value);\r\n    }   \r\n\r\n    // function to handle form submission\r\n    async function handleSubmit(e) {\r\n        e.preventDefault(); // prevents default form submission\r\n        setLoading(true);\r\n        // submit post request to backend with username and password\r\n        const response = await fetch(`${API_BASE_URL}/signup`, { \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            }),\r\n        });\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        // if response is successful, set credentialsError to false and navigate to home page\r\n        if(data.success) {\r\n            setCredentialsError(false);\r\n            sessionStorage.setItem('access_token', data.access_token);\r\n            navigate('/');\r\n        // if response is not successful, set credentialsError to true\r\n        } else {\r\n            setCredentialsError(true);\r\n        }\r\n        console.log(data);\r\n\r\n    }\r\n\r\n    // return the JSX for the signup page\r\n    return(\r\n    <>\r\n    <div className=\"container\">\r\n        <img src={titleImg} alt='title' className='title-img'/>\r\n        <Form \r\n            handlePasswordChange={handlePasswordChange} \r\n            handleUsernameChange={handleUsernameChange} \r\n            handleSubmit={handleSubmit} username={username} \r\n            password={password}\r\n            login={false}\r\n            credentialsError={credentialsError}\r\n            loading={loading}\r\n        />\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SignUp"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}