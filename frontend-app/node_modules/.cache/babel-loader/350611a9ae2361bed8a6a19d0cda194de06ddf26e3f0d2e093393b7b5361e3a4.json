{"ast":null,"code":"import{useEffect,useState}from'react';import titleImg from'../images/pokemon_logo.png';import PokemonCard from'../components/PokemonCard';import{Link}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const[data,setData]=useState([]);useEffect(()=>{// Fetch data from Flask API using fetch\nfetch('http://127.0.0.1:5000/api/pokemons').then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(rec_data=>setData(Object.values(rec_data)))// convert dictionary to array and store in data state\n.catch(error=>console.error('Error fetching data:',error));},[]);const pokemonEl=data===null||data===void 0?void 0:data.map((pokemon,index)=>{return/*#__PURE__*/_jsx(Link,{to:`/details/${pokemon.name}`,children:/*#__PURE__*/_jsx(PokemonCard,{pokemon:pokemon,index:index})},index);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:titleImg,alt:\"title\",className:\"title-img\"}),/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-poster-list\",children:pokemonEl})]});}export default Home;","map":{"version":3,"names":["useEffect","useState","titleImg","PokemonCard","Link","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Home","data","setData","fetch","then","response","ok","Error","json","rec_data","Object","values","catch","error","console","pokemonEl","map","pokemon","index","to","name","children","src","alt","className"],"sources":["C:/Users/Kumar/Desktop/app/frontend/frontend-app/src/pages/home.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport titleImg from '../images/pokemon_logo.png';\r\nimport PokemonCard from '../components/PokemonCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from Flask API using fetch\r\n    fetch('http://127.0.0.1:5000/api/pokemons')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(rec_data => setData(Object.values(rec_data))) // convert dictionary to array and store in data state\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  const pokemonEl = data?.map((pokemon, index) => {\r\n    return (\r\n      <Link key={index} to={`/details/${pokemon.name}`}>\r\n        <PokemonCard pokemon={pokemon} index={index}>\r\n        </PokemonCard>\r\n      </Link>\r\n    );\r\n  })\r\n\r\n    return (\r\n      <>\r\n      <img src={titleImg} alt='title' className='title-img'/>\r\n        <div className='pokemon-poster-list'>\r\n            {pokemonEl}\r\n        </div>  \r\n      </>\r\n    \r\n    );\r\n  }\r\n  \r\n  export default Home;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,QAAQ,KAAM,4BAA4B,CACjD,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEpCD,SAAS,CAAC,IAAM,CACd;AACAc,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,EAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,MAAO,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,QAAQ,EAAIP,OAAO,CAACQ,MAAM,CAACC,MAAM,CAACF,QAAQ,CAAC,CAAC,CAAE;AAAA,CACnDG,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,CACjE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,SAAS,CAAGd,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEe,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAK,CAC9C,mBACEvB,IAAA,CAACF,IAAI,EAAa0B,EAAE,CAAE,YAAYF,OAAO,CAACG,IAAI,EAAG,CAAAC,QAAA,cAC/C1B,IAAA,CAACH,WAAW,EAACyB,OAAO,CAAEA,OAAQ,CAACC,KAAK,CAAEA,KAAM,CAC/B,CAAC,EAFLA,KAGL,CAAC,CAEX,CAAC,CAAC,CAEA,mBACEnB,KAAA,CAAAF,SAAA,EAAAwB,QAAA,eACA1B,IAAA,QAAK2B,GAAG,CAAE/B,QAAS,CAACgC,GAAG,CAAC,OAAO,CAACC,SAAS,CAAC,WAAW,CAAC,CAAC,cACrD7B,IAAA,QAAK6B,SAAS,CAAC,qBAAqB,CAAAH,QAAA,CAC/BN,SAAS,CACT,CAAC,EACN,CAAC,CAGP,CAEA,cAAe,CAAAf,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}